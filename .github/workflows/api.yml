name: Product API

on:
  push:
    branches:
      - "master"
  pull_request:
    

jobs:

  build_test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["10", "12"]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm build
      - name: Tests
        run: npm test

  publish_to_docker_hub:
    name: Publish Docker Hub
    runs-on: ubuntu-latest
    needs: ["build_test"]
    env:
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
          repository: $DOCKER_REPO
          tag_with_ref: true

  publish_to_aws_ecr:
    name: Publish AWS ECR
    runs-on: ubuntu-latest
    needs: ["publish_to_docker_hub"]
    env:
      ECR_REGISTRY: ${{ secrets.DOCKER_ECR_REPO }}
      ECR_ARTIFACT: produtos-api
      IMAGE_TAG: ${GITHUB_SHA::8}
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build Docker image
        run: docker build -t $ECR_REGISTRY/$ECR_ARTIFACT:latest -t $ECR_REGISTRY/$ECR_ARTIFACT:${GITHUB_SHA::8} .
      - name: Push to ECR
        run: docker push $ECR_REGISTRY/$ECR_ARTIFACT
